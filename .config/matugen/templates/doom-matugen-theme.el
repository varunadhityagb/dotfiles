;;; doom-matugen-theme.el --- Matugen generated theme -*- lexical-binding: t; no-byte-compile: t; -*-
;;
;; Author: Generated by Matugen
;; Maintainer: 
;; Source: https://github.com/InioX/matugen
;;
;;; Commentary:
;;
;; A dynamically generated theme using Matugen color scheme.
;;
;;; Code:

(require 'doom-themes)


;;
;;; Variables

(defgroup doom-matugen-theme nil
  "Options for the `doom-matugen' theme."
  :group 'doom-themes)

(defcustom doom-matugen-brighter-modeline nil
  "If non-nil, more vivid colors will be used to style the mode-line."
  :group 'doom-matugen-theme
  :type 'boolean)

(defcustom doom-matugen-brighter-comments nil
  "If non-nil, comments will be highlighted in more vivid colors."
  :group 'doom-matugen-theme
  :type 'boolean)

(defcustom doom-matugen-comment-bg doom-matugen-brighter-comments
  "If non-nil, comments will have a subtle highlight to enhance their
legibility."
  :group 'doom-matugen-theme
  :type 'boolean)

(defcustom doom-matugen-padded-modeline doom-themes-padded-modeline
  "If non-nil, adds a 4px padding to the mode-line.
Can be an integer to determine the exact padding."
  :group 'doom-matugen-theme
  :type '(choice integer boolean))


;;
;;; Theme definition

(def-doom-theme doom-matugen
    "A dark theme generated by Matugen using Material You colors."
  :family 'doom-one
  :background-mode 'dark

  ;; name        default   256           16
  ((bg         '("{{colors.background.default.hex}}" "black"       "black"  ))
   (fg         '("{{colors.on_background.default.hex}}" "#bfbfbf"     "brightwhite"  ))

   ;; Off-color variants
   (bg-alt     '("{{colors.surface_container.default.hex}}" "black"       "black"        ))
   (fg-alt     '("{{colors.outline.default.hex}}" "#2d2d2d"     "white"        ))

   ;; Base spectrum from bg to fg
   (base0      '("{{colors.surface_container_lowest.default.hex}}" "black"       "black"        ))
   (base1      '("{{colors.surface_container_low.default.hex}}" "#1e1e1e"     "brightblack"  ))
   (base2      '("{{colors.surface_container.default.hex}}" "#2e2e2e"     "brightblack"  ))
   (base3      '("{{colors.surface_container_high.default.hex}}" "#262626"     "brightblack"  ))
   (base4      '("{{colors.surface_variant.default.hex}}" "#3f3f3f"     "brightblack"  ))
   (base5      '("{{colors.outline.default.hex}}" "#525252"     "brightblack"  ))
   (base6      '("{{colors.on_surface_variant.default.hex}}" "#6b6b6b"     "brightblack"  ))
   (base7      '("{{colors.surface_bright.default.hex}}" "#979797"     "brightblack"  ))
   (base8      '("{{colors.on_background.default.hex}}" "#dfdfdf"     "white"        ))

   (grey       base4)
   (red        '("{{colors.error.default.hex}}" "#ff6655" "red"          ))
   (orange     '("{{colors.tertiary.default.hex}}" "#dd8844" "brightred"    ))
   (green      '("{{colors.secondary.default.hex}}" "#99bb66" "green"        ))
   (teal       '("{{colors.primary_fixed_dim.default.hex}}" "#44b9b1" "brightgreen"  ))
   (yellow     '("{{colors.tertiary_fixed.default.hex}}" "#ECBE7B" "yellow"       ))
   (blue       '("{{colors.primary.default.hex}}" "#51afef" "brightblue"   ))
   (dark-blue  '("{{colors.primary_container.default.hex}}" "#2257A0" "blue"         ))
   (magenta    '("{{colors.tertiary_fixed_dim.default.hex}}" "#c678dd" "brightmagenta"))
   (violet     '("{{colors.tertiary.default.hex}}" "#a9a1e1" "magenta"      ))
   (cyan       '("{{colors.primary_fixed.default.hex}}" "#46D9FF" "brightcyan"   ))
   (dark-cyan  '("{{colors.secondary_container.default.hex}}" "#5699AF" "cyan"         ))

   ;; Universal syntax classes
   (highlight      blue)
   (vertical-bar   (doom-darken base1 0.1))
   (selection      dark-blue)
   (builtin        magenta)
   (comments       (if doom-matugen-brighter-comments dark-cyan base5))
   (doc-comments   (doom-lighten (if doom-matugen-brighter-comments dark-cyan base5) 0.25))
   (constants      violet)
   (functions      magenta)
   (keywords       blue)
   (methods        cyan)
   (operators      blue)
   (type           yellow)
   (strings        green)
   (variables      (doom-lighten magenta 0.4))
   (numbers        orange)
   (region         `(,(doom-lighten (car bg-alt) 0.15) ,@(doom-lighten (cdr base1) 0.35)))
   (error          red)
   (warning        yellow)
   (success        green)
   (vc-modified    orange)
   (vc-added       green)
   (vc-deleted     red)

   ;; Modeline colors
   (modeline-fg              fg)
   (modeline-fg-alt          base5)
   (modeline-bg              (if doom-matugen-brighter-modeline
                                 (doom-darken blue 0.45)
                               (doom-darken bg-alt 0.1)))
   (modeline-bg-alt          (if doom-matugen-brighter-modeline
                                 (doom-darken blue 0.475)
                               `(,(doom-darken (car bg-alt) 0.15) ,@(cdr bg))))
   (modeline-bg-inactive     `(,(car bg-alt) ,@(cdr base1)))
   (modeline-bg-inactive-alt `(,(doom-darken (car bg-alt) 0.1) ,@(cdr bg)))

   (-modeline-pad
    (when doom-matugen-padded-modeline
      (if (integerp doom-matugen-padded-modeline) doom-matugen-padded-modeline 4))))


  ;;;; Base theme face overrides
  (((line-number &override) :foreground base4)
   ((line-number-current-line &override) :foreground fg)
   ((font-lock-comment-face &override)
    :background (if doom-matugen-comment-bg (doom-lighten bg 0.05) 'unspecified))
   (mode-line
    :background modeline-bg :foreground modeline-fg
    :box (if -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg)))
   (mode-line-inactive
    :background modeline-bg-inactive :foreground modeline-fg-alt
    :box (if -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive)))
   (mode-line-emphasis :foreground (if doom-matugen-brighter-modeline base8 highlight))

   ;;;; css-mode <built-in> / scss-mode
   (css-proprietary-property :foreground orange)
   (css-property             :foreground green)
   (css-selector             :foreground blue)
   ;;;; doom-modeline
   (doom-modeline-bar :background (if doom-matugen-brighter-modeline modeline-bg highlight))
   (doom-modeline-buffer-file :inherit 'mode-line-buffer-id :weight 'bold)
   (doom-modeline-buffer-path :inherit 'mode-line-emphasis :weight 'bold)
   (doom-modeline-buffer-project-root :foreground green :weight 'bold)
   ;;;; elscreen
   (elscreen-tab-other-screen-face :background "#353a42" :foreground "#1e2022")
   ;;;; ivy
   (ivy-current-match :background dark-blue :distant-foreground base0 :weight 'normal)
   ;;;; LaTeX-mode
   (font-latex-math-face :foreground green)
   ;;;; markdown-mode
   (markdown-markup-face :foreground base5)
   (markdown-header-face :inherit 'bold :foreground red)
   ((markdown-code-face &override) :background (doom-lighten base3 0.05))
   ;;;; rjsx-mode
   (rjsx-tag :foreground red)
   (rjsx-attr :foreground orange)
   ;;;; solaire-mode
   (solaire-mode-line-face
    :inherit 'mode-line
    :background modeline-bg-alt
    :box (if -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-alt)))
   (solaire-mode-line-inactive-face
    :inherit 'mode-line-inactive
    :background modeline-bg-inactive-alt
    :box (if -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive-alt))))

  ;;;; Base theme variable overrides
  ())

;;; doom-matugen-theme.el ends here
